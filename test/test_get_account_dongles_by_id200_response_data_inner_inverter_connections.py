# coding: utf-8

"""
    GivEnergy API Documentation (v1.14.0)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.get_account_dongles_by_id200_response_data_inner_inverter_connections import GetAccountDonglesByID200ResponseDataInnerInverterConnections  # noqa: E501

class TestGetAccountDonglesByID200ResponseDataInnerInverterConnections(unittest.TestCase):
    """GetAccountDonglesByID200ResponseDataInnerInverterConnections unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAccountDonglesByID200ResponseDataInnerInverterConnections:
        """Test GetAccountDonglesByID200ResponseDataInnerInverterConnections
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAccountDonglesByID200ResponseDataInnerInverterConnections`
        """
        model = GetAccountDonglesByID200ResponseDataInnerInverterConnections()  # noqa: E501
        if include_optional:
            return GetAccountDonglesByID200ResponseDataInnerInverterConnections(
                batteries = [{"serial":"ki1513g952","firmware_version":"22210","capacity":{"full":191.39,"design":186},"cell_count":16,"has_usb":false}]
            )
        else:
            return GetAccountDonglesByID200ResponseDataInnerInverterConnections(
        )
        """

    def testGetAccountDonglesByID200ResponseDataInnerInverterConnections(self):
        """Test GetAccountDonglesByID200ResponseDataInnerInverterConnections"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
