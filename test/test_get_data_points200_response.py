# coding: utf-8

"""
    GivEnergy API Documentation (v1.14.0)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.get_data_points200_response import GetDataPoints200Response  # noqa: E501

class TestGetDataPoints200Response(unittest.TestCase):
    """GetDataPoints200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDataPoints200Response:
        """Test GetDataPoints200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDataPoints200Response`
        """
        model = GetDataPoints200Response()  # noqa: E501
        if include_optional:
            return GetDataPoints200Response(
                data = [{"time":"1996-09-06T10:29:52Z","power":{"solar":{"power":4703,"arrays":[{"array":1,"voltage":198.6,"current":3.3,"power":491},{"array":2,"voltage":170.8,"current":10,"power":2806}]},"grid":{"voltage":128.3,"current":98.1,"power":19821,"frequency":49.25},"battery":{"percent":79,"power":-2289,"temperature":12},"consumption":{"power":22636},"inverter":{"temperature":50,"power":-9476,"output_voltage":144.7,"output_frequency":49.69,"eps_power":24672}},"today":{"solar":4373.9,"grid":{"import":3168.4,"export":5384.4},"battery":{"charge":8691.3,"discharge":4350.4},"consumption":5673.7,"ac_charge":8021.5},"total":{"solar":4353.3,"grid":{"import":4625.8,"export":7045.8},"battery":{"charge":1034.1,"discharge":1034.1},"consumption":-11905.4,"ac_charge":9568.8},"is_metered":true},{"time":"1986-05-01T00:25:45Z","power":{"solar":{"power":3634,"arrays":[{"array":1,"voltage":109.6,"current":1.5,"power":3533},{"array":2,"voltage":426.7,"current":13.8,"power":832}]},"grid":{"voltage":189.4,"current":77.9,"power":17053,"frequency":50.26},"battery":{"percent":22,"power":379,"temperature":7.2},"consumption":{"power":33627},"inverter":{"temperature":0.2,"power":-9984,"output_voltage":225.5,"output_frequency":50.16,"eps_power":64755}},"today":{"solar":5190.3,"grid":{"import":3814.8,"export":7184.3},"battery":{"charge":311.5,"discharge":8626.8},"consumption":2322.7,"ac_charge":271.4},"total":{"solar":1730.7,"grid":{"import":4372,"export":1752.7},"battery":{"charge":704.3,"discharge":704.3},"consumption":-2249.1,"ac_charge":8257.5},"is_metered":true}]
            )
        else:
            return GetDataPoints200Response(
        )
        """

    def testGetDataPoints200Response(self):
        """Test GetDataPoints200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
