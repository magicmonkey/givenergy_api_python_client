# coding: utf-8

"""
    GivEnergy API Documentation (v1.14.0)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.get_account_dongles_by_id200_response_data_inner_inverter import GetAccountDonglesByID200ResponseDataInnerInverter  # noqa: E501

class TestGetAccountDonglesByID200ResponseDataInnerInverter(unittest.TestCase):
    """GetAccountDonglesByID200ResponseDataInnerInverter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAccountDonglesByID200ResponseDataInnerInverter:
        """Test GetAccountDonglesByID200ResponseDataInnerInverter
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAccountDonglesByID200ResponseDataInnerInverter`
        """
        model = GetAccountDonglesByID200ResponseDataInnerInverter()  # noqa: E501
        if include_optional:
            return GetAccountDonglesByID200ResponseDataInnerInverter(
                serial = 'WV6012O901',
                status = 'LOST',
                last_online = '1998-11-29T17:03:36Z',
                last_updated = '1979-11-30T21:42:03Z',
                commission_date = '1979-07-25T07:42:16Z',
                info = openapi_client.models.get_account_dongles_by_id_200_response_data_inner_inverter_info.getAccountDonglesByID_200_response_data_inner_inverter_info(
                    battery_type = 'LITHIUM', 
                    battery = openapi_client.models.get_account_dongles_by_id_200_response_data_inner_inverter_info_battery.getAccountDonglesByID_200_response_data_inner_inverter_info_battery(
                        nominal_capacity = 110, 
                        nominal_voltage = 307, ), 
                    model = 'Gateway', 
                    max_charge_rate = 0, ),
                warranty = openapi_client.models.get_account_dongles_by_id_200_response_data_inner_inverter_warranty.getAccountDonglesByID_200_response_data_inner_inverter_warranty(
                    type = 'Standard', 
                    expiry_date = '1984-07-25T07:42:16Z', ),
                firmware_version = openapi_client.models.get_account_dongles_by_id_200_response_data_inner_inverter_firmware_version.getAccountDonglesByID_200_response_data_inner_inverter_firmware_version(
                    arm = 420, 
                    dsp = '', ),
                connections = openapi_client.models.get_account_dongles_by_id_200_response_data_inner_inverter_connections.getAccountDonglesByID_200_response_data_inner_inverter_connections(
                    batteries = [{"serial":"ki1513g952","firmware_version":"22210","capacity":{"full":191.39,"design":186},"cell_count":16,"has_usb":false}], )
            )
        else:
            return GetAccountDonglesByID200ResponseDataInnerInverter(
        )
        """

    def testGetAccountDonglesByID200ResponseDataInnerInverter(self):
        """Test GetAccountDonglesByID200ResponseDataInnerInverter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
