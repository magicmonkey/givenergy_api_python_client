# coding: utf-8

"""
    GivEnergy API Documentation (v1.14.0)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.get_smart_device_by_id200_response_data_inner import GetSmartDeviceByID200ResponseDataInner  # noqa: E501

class TestGetSmartDeviceByID200ResponseDataInner(unittest.TestCase):
    """GetSmartDeviceByID200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSmartDeviceByID200ResponseDataInner:
        """Test GetSmartDeviceByID200ResponseDataInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSmartDeviceByID200ResponseDataInner`
        """
        model = GetSmartDeviceByID200ResponseDataInner()  # noqa: E501
        if include_optional:
            return GetSmartDeviceByID200ResponseDataInner(
                uuid = '4a516ac4-c732-4b46-b223-61c9ecf3206e',
                alias = 'veniam',
                other_data = openapi_client.models.get_smart_device_by_id_200_response_data_inner_other_data.getSmartDeviceByID_200_response_data_inner_other_data(
                    graph_color = '#f0c27c', 
                    hardware_id = 'P', 
                    local_key = 'J', )
            )
        else:
            return GetSmartDeviceByID200ResponseDataInner(
        )
        """

    def testGetSmartDeviceByID200ResponseDataInner(self):
        """Test GetSmartDeviceByID200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
